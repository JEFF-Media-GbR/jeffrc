#!/bin/bash

function enable_tty() {
  interactive="-t"
  interactive_label="(tty)"
}

function print_usage() {
   echo "Usage: rc [OPTIONS]... HOST TASK [ARGUMENTS]...
   
Options"
echo "  -d;enable debug mode
  -v;enable verbose mode
  -t;enable pseudo-tty for ssh
  -h;print this help message" | column -t -s ";"

echo "
Tasks"
echo "  sh;execute shell command
  script;uploads a script and executes it remotely
  put;upload a file
  update;shows available apt updates
  upgrade;installs available apt upgrades
  install;installs apt packages" | column -t -s ";"
}

while getopts ":dtvh" OPTION; do
  case $OPTION in
  d)
    debug=1
    ;;
  v)
    verbose="-v"
    ;;
  t)
    enable_tty
    ;;
  h)
    print_usage
    exit 0
    ;;
  \?)
    echo "error: invalid option: '-$OPTARG'" 
    exit 1
    ;;
  esac
done
shift $((OPTIND-1))

hosts="$1"

shift
if [[ "$hosts" == "all" ]]; then
  hosts="$all_hosts"
fi



function echo_bold() {
  echo -ne "\e[1m"
  echo -ne "$@"
  echo -ne "\e[0m"
}

function echo_dim() {
  echo -ne "\e[2m"
  echo -ne "$@"
  echo -ne "\e[0m"
}

function debug() {
  if [[ "$debug" -eq 1 ]];
    then echo_dim "$@\n"
  fi
}

task="$1"
shift

if [[ "$task" == "put" ]]; then
  shift
  source="$1"
  shift
  dest="$1"
  shift
  if [[ -z "$source" ]]; then
    echo "error: no source file"
    exit 1
  elif [[ -z "$dest" ]]; then
    echo "error: no destination file"
    exit 1
  fi
  for host in $hosts; do
    if [[ "$host" == "localhost" ]]; then
      continue
    fi
    echo "$source -> $host:$dest" | column -s " " -t
    scp "$source" "$host":"$dest" > /dev/null || echo "error: transfer failed."

  done
  exit 0
	
elif [[ "$task" == "update" ]]; then
  cmd='apt-get update >/dev/null; output=$(LANG=C apt-get --just-print upgrade 2>&1 | perl -ne '\''if (/Inst\s([\w,\-,\d,\.,~,:,\+]+)\s\[([\w,\-,\d,\.,~,:,\+]+)\]\s\(([\w,\-,\d,\.,~,:,\+]+)\)? /i) {print "$1: $2 -\> $3\n"}'\''); if [[ -z "$output" ]]; then echo "All packages on $HOSTNAME are up to date"; else echo "Following packages on $HOSTNAME are outdated:"; echo "$output" | column -s " " -t; fi'
	
elif [[ "$task" == "upgrade" ]]; then
  cmd="apt-get upgrade"
  enable_tty

elif [[ "$task" == "install" ]]; then
  cmd="apt-get install $*"
  enable_tty

elif [[ "$task" == "sh" ]]; then
  cmd="$*"

else
  echo "error: unknown task '$task'."
  exit 1
fi

for host in $hosts; do
  echo_bold [ "$host" ]
  echo_dim " $interactive_label\n"
  if [[ "$host" == "localhost" ]]; then
    debug eval \""$cmd"\"
    eval "$cmd"
  else
    [[ ! -z "$host$cmd" ]] && debug "ssh arguments: $verbose $interactive"
    debug executing: "$cmd"
    ssh $verbose $interactive "$host" "$cmd"
  fi
  echo
done
